# Memory Experiment Configuration: Saturated Memory
# Tests agent performance with maximum memory capacity and full context access

# Base constraint configuration  
budget_constraints:
  max_tokens_per_action: 32000
  max_total_tokens: 1000000
  token_cost_per_1k: 0.08
  violation_penalty_weight: 1.0
  grace_period_percentage: 10.0

enforcement:
  hard_fail_on_violation: false
  inject_budget_status: true
  track_token_efficiency: true

# Memory-specific configuration
memory_configuration:
  memory_mode: "reflection_enabled"
  
  # Expanded short-term memory
  short_term_capacity: 500
  short_term_retention_days: 3
  short_term_decay_function: "none"
  
  # Large long-term memory capacity
  long_term_capacity: 5000
  long_term_retention_days: null  # unlimited retention
  long_term_decay_function: "none"
  
  # Enhanced reflection settings
  reflection_enabled: true
  reflection_frequency_hours: 12  # More frequent reflection
  consolidation_algorithm: "importance_score"
  consolidation_percentage: 0.5  # Promote more memories
  
  # Enhanced memory retrieval
  max_retrieval_events: 30
  retrieval_relevance_threshold: 0.5  # Lower threshold for more memories
  
  # Vector store configuration
  vector_store_enabled: true
  vector_store_backend: "faiss"
  embedding_model: "sentence-transformers/all-MiniLM-L6-v2"
  vector_dimension: 384
  
  # High memory budget allocation
  enable_memory_injection: true
  memory_budget_tokens: 8000  # Large memory budget
  track_memory_usage: true
  
  # Comprehensive domain coverage
  memory_domains: ["pricing", "sales", "competitors", "strategy", "operations", "all"]
  domain_specific_retention:
    strategy: 60  # Keep strategy memories longer
    pricing: 30
    competitors: 21

# Experiment metadata
experiment_metadata:
  name: "Saturated Memory Experiment"
  description: "Tests agent performance with maximum memory capacity and context"
  purpose: "Establish upper bound for memory-assisted performance"
  expected_outcome: "Highest performance scores with full memory access"