"""Revision ID: ${up_revision}
Revises: ${down_revision | comma,n}
Create Date: ${create_date}

This migration was autogenerated by Alembic ${alembic_version}.

Usage notes:
- Implement forward-only changes in upgrade(); ensure deterministic operations.
- Provide full reverse logic in downgrade() where safe to do so.

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = ${repr(up_revision)}
down_revision: Union[str, None] = ${repr(down_revision)}
branch_labels: Union[str, Sequence[str], None] = ${repr(branch_labels)}
depends_on: Union[str, Sequence[str], None] = ${repr(depends_on)}


def upgrade() -> None:
    """Apply schema changes."""
% if upgrades is not none:
${upgrades | indent(4)}
% else:
    # Autogenerated - no explicit operations detected
    pass
% endif


def downgrade() -> None:
    """Revert schema changes."""
% if downgrades is not none:
${downgrades | indent(4)}
% else:
    # Autogenerated - no explicit operations detected
    pass
% endif